environment:
  matrix:
  # - JULIAVERSION: "julialang/bin/winnt/x86/0.4/julia-0.4-latest-win32.exe"
  #   JAVA_HOME: C:\Program Files (x86)\Java\jdk1.8.0\
  - JULIAVERSION: "julialang/bin/winnt/x64/0.4/julia-0.4-latest-win64.exe"
    JAVA_HOME: C:\Program Files\Java\jdk1.8.0\
  # - JULIAVERSION: "julianightlies/bin/winnt/x86/julia-latest-win32.exe"
  #   JAVA_HOME: C:\Program Files (x86)\Java\jdk1.8.0\
  - JULIAVERSION: "julianightlies/bin/winnt/x64/julia-latest-win64.exe"
    JAVA_HOME: C:\Program Files\Java\jdk1.8.0\

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
# Download most recent Julia Windows binary
  # - ps: (new-object net.webclient).DownloadFile($("http://status.julialang.org/download/"+$env:JULIAVERSION), "C:\projects\julia-binary.exe")
  - ps: (new-object net.webclient).DownloadFile(
        $("http://s3.amazonaws.com/"+$env:JULIAVERSION),
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
# Need to convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.init(); Pkg.add(\"LibCURL\"); Pkg.checkout(\"LibCURL\"); Pkg.clone(\"https://github.com/samuel-massinon-invenia/JavaCall.jl.git\"); Pkg.checkout(\"JavaCall\", \"pull-request/bf8b4987\"); Pkg.clone(\"https://github.com/invenia/WinRPM.jl.git\"); Pkg.clone(pwd(), \"FTPClient\"); Pkg.build(\"FTPClient\");"

test_script:
  - C:\projects\julia\bin\julia --check-bounds=yes --color=yes -e "Pkg.test(\"FTPClient\")"